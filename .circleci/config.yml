orbs:
  # Using 1.0 of the Orbs means it will use the latest 1.0.x version from https://github.com/wordpress-mobile/circleci-orbs
  android: wordpress-mobile/android@1.0
  git: wordpress-mobile/git@1.0
  bundle-install: toshimaru/bundle-install@0.3.1
  slack: circleci/slack@3.4.2

parameters:
  generate_screenshots:
    type: boolean
    default: false
  release_build:
    type: boolean
    default: false

commands:
  copy-gradle-properties:
    steps:
      - run:
          name: Setup gradle.properties
          command: cp gradle.properties-example gradle.properties
  update-gradle-memory:
      parameters:
        jvmargs:
          type: string
          default: "Xmx2048m"
      steps:
        - run:
            name: Update memory setting
            command: sed -i "s/org.gradle.jvmargs=.*/org.gradle.jvmargs=-<< parameters.jvmargs >> -XX:+HeapDumpOnOutOfMemoryError -Dkotlin.compiler.execution.strategy=in-process -Dkotlin.incremental=false /" gradle.properties

version: 2.1
jobs:
  Installable Build:
    executor:
      name: android/default
      api-version: "29"
    steps:
      - git/shallow-checkout
      - bundle-install/bundle-install:
          cache_key_prefix: installable-build-v4
      - run:
          name: Copy Secrets
          command: FASTLANE_SKIP_UPDATE_CHECK=1 bundle exec fastlane run configure_apply
      - update-gradle-memory
      - android/restore-gradle-cache
      - run:
          name: Set version environment variable
          command: |
            if [ -n "$CIRCLE_PULL_REQUEST" ]; then
              PR_NUMBER=$(basename $CIRCLE_PULL_REQUEST)
              PREFIX="pr-${PR_NUMBER}"
            else
              PREFIX="$CIRCLE_BRANCH"
            fi

            VERSION_NAME="${PREFIX}-build-${CIRCLE_BUILD_NUM}"
            echo "export VERSION_NAME=$VERSION_NAME" >> $BASH_ENV
      - run:
          name: Build WordPress APK
          command: ./gradlew --stacktrace assembleWordpressJalapenoDebug -PinstallableBuildVersionName="$VERSION_NAME"
      - run:
          name: Build Jetpack APK
          command: ./gradlew --stacktrace assembleJetpackJalapenoDebug -PinstallableBuildVersionName="$VERSION_NAME"
      - android/save-gradle-cache
      - run:
          name: Prepare APK
          command: |
            mkdir -p Artifacts
            mv WordPress/build/outputs/apk/wordpressJalapeno/debug/org.wordpress.android-wordpress-jalapeno-debug.apk "Artifacts/WordPress-${VERSION_NAME}.apk"
            mv WordPress/build/outputs/apk/jetpackJalapeno/debug/org.wordpress.android-jetpack-jalapeno-debug.apk "Artifacts/Jetpack-${VERSION_NAME}.apk"
      - store_artifacts:
          path: Artifacts
          destination: Artifacts
  Release Build:
    parameters:
      alpha:
        description: If true, builds the Zalpha, otherwise builds the beta
        type: boolean
      app:
        description: The app to build, should be either 'wordpress' or 'jetpack'
        type: string
    executor:
      name: android/default
      api-version: "29"
    environment:
      JVM_OPTS: -Xmx2048m
    steps:
      - run:
          name: Init messages
          command: |
            SLACKMSG_APP_NAME=$(echo "<< parameters.app >>" | sed s/wordpress/WordPress/i | sed s/jetpack/Jetpack/i)
            echo "export SLACK_FAILURE_MESSAGE=':red_circle: Build for ${SLACKMSG_APP_NAME} Android failed!'" >> $BASH_ENV
      - git/shallow-checkout
      - bundle-install/bundle-install:
          cache_key_prefix: &release-build-cache-key release-build-v2
      - run:
          name: Copy Secrets
          command: FASTLANE_SKIP_UPDATE_CHECK=1 bundle exec fastlane run configure_apply
      - update-gradle-memory
      - android/restore-gradle-cache
      - run:
          name: Prepare build
          command: |
            APP_VERSION=$(./gradlew -q printVersionName | tail -1)
            SLACKMSG_APP_NAME=$(echo "<< parameters.app >>" | sed s/wordpress/WordPress/i | sed s/jetpack/Jetpack/i)
            SLACKMSG_APP_VERSION=<<# parameters.alpha >>$(./gradlew -q printVersionName -Palpha | tail -1)<</ parameters.alpha >><<^ parameters.alpha >>$APP_VERSION<</ parameters.alpha >>
            echo "export APP_VERSION=${APP_VERSION}" >> $BASH_ENV
            echo "export SLACK_FAILURE_MESSAGE=':red_circle: Build for ${SLACKMSG_APP_NAME} Android ${SLACKMSG_APP_VERSION} failed!'" >> $BASH_ENV
            echo "export SLACK_SUCCESS_MESSAGE=':tada: ${SLACKMSG_APP_NAME} Android ${SLACKMSG_APP_VERSION} has been deployed!'" >> $BASH_ENV
            # Prevent fastlane from checking for updates, also removing the verbose fastlane changelog at the end of each invocation.
            echo "export FASTLANE_SKIP_UPDATE_CHECK=1" >> $BASH_ENV
            bundle check
      - when:
          condition: << parameters.alpha >>
          steps:
            - run:
                name: Build << parameters.app >> Zalpha
                command: |
                  if [[ ${APP_VERSION} == *"-rc-"* ]]; then
                    bundle exec fastlane build_alpha app:<< parameters.app >> skip_confirm:true skip_prechecks:true upload_to_play_store:true
                  else
                    echo "Skipping and halting this job because we only build Zalpha variants for rc versions, but current version is ${APP_VERSION}"
                    circleci-agent step halt
                  fi
                no_output_timeout: 15m
      - unless:
          condition: << parameters.alpha >>
          steps:
            - run:
                name: Build << parameters.app >> Vanilla
                command: |
                  if [[ ${APP_VERSION} == *"-rc-"* ]]; then
                    bundle exec fastlane build_beta app:<< parameters.app >> skip_confirm:true skip_prechecks:true upload_to_play_store:true
                  else
                    bundle exec fastlane build_and_upload_release app:<< parameters.app >> skip_confirm:true skip_prechecks:true upload_to_play_store:true
                  fi
                no_output_timeout: 15m
      - android/save-gradle-cache
      - store_artifacts:
          path: build
          destination: Artifacts
      - persist_to_workspace:
          root: build
          paths: ['*.aab'] # So they are made available for the "Create GitHub Release" job
      - slack/status:
          include_job_number_field: false
          include_project_field: false
          include_visit_job_action: false
          webhook: '${SLACK_BUILD_WEBHOOK}'
          failure_message: '${SLACK_FAILURE_MESSAGE}'
          success_message: '${SLACK_SUCCESS_MESSAGE}'
  Create GitHub Release:
    executor:
      name: android/default
      api-version: "29"
    steps:
      - git/shallow-checkout
      - bundle-install/bundle-install:
          cache_key_prefix: *release-build-cache-key
      - attach_workspace:
          at: build # Restore *.aab files built from "Release Build" jobs so we can attach them to the GitHub release
      - run:
          name: Create GitHub Release
          command: |
            bundle exec fastlane create_gh_release


  Connected Tests:
    parameters:
      post-to-slack:
        description: Post to Slack when tests fail. SLACK_WEBHOOK ENV variable must be set.
        type: boolean
        default: false
    executor:
      name: android/default
      api-version: "29"
    steps:
      - git/shallow-checkout
      - android/restore-gradle-cache
      - copy-gradle-properties
      - update-gradle-memory:
          jvmargs: "Xmx1536m"
      - run:
          name: Build
          command: ./gradlew WordPress:assembleWordPressVanillaDebug --stacktrace
      - run:
          name: Build Tests
          command: ./gradlew WordPress:assembleWordPressVanillaDebugAndroidTest --stacktrace
      - run:
          name: Decrypt credentials
          command: openssl aes-256-cbc -md sha256 -d -in .circleci/.firebase.secrets.json.enc -out .circleci/.firebase.secrets.json -k "${FIREBASE_SECRETS_ENCRYPTION_KEY}"
      - android/firebase-test:
          key-file: .circleci/.firebase.secrets.json
          type: instrumentation
          apk-path: WordPress/build/outputs/apk/wordpressVanilla/debug/org.wordpress.android-wordpress-vanilla-debug.apk
          test-apk-path: WordPress/build/outputs/apk/androidTest/wordpressVanilla/debug/org.wordpress.android-wordpress-vanilla-debug-androidTest.apk
          test-targets: notPackage org.wordpress.android.ui.screenshots
          device: model=Pixel2,version=28,locale=en,orientation=portrait
          project: api-project-108380595987
          timeout: 10m
          num-flaky-test-attempts: 2
          results-history-name: CircleCI WordPress Connected Tests
      - android/save-gradle-cache
      - when:
          condition: << parameters.post-to-slack >>
          steps:
            - slack/status:
                fail_only: true
                include_job_number_field: false
                include_project_field: false
                failure_message: ':red_circle: WordPress Android connected tests failed on \`${CIRCLE_BRANCH}\` branch after merge by ${CIRCLE_USERNAME}. See <https://console.firebase.google.com/u/0/project/api-project-108380595987/testlab/histories/bh.e0c3a59bd9ed670|Firebase console test results> for details.\n\nPlease reach out in #platform9 if you think this failure is not caused by your changes, so we can investigate.'
  raw-screenshots:
    executor:
      name: android/default
      api-version: "29"
    working_directory: /tmp/workspace
    steps:
      - git/shallow-checkout
      - bundle-install/bundle-install:
          cache_key_prefix: raw-screenshots-v2
      - android/restore-gradle-cache
      - copy-gradle-properties
      - update-gradle-memory:
          jvmargs: "Xmx1024m"
      - run:
          name: Build
          command: ./gradlew WordPress:assembleWordPressVanillaDebug --stacktrace
      - run:
          name: Build Tests
          command: ./gradlew WordPress:assembleWordPressVanillaDebugAndroidTest --stacktrace
      - run:
          name: Decrypt credentials
          command: openssl aes-256-cbc -md sha256 -d -in .circleci/.firebase.secrets.json.enc -out .circleci/.firebase.secrets.json -k "${FIREBASE_SECRETS_ENCRYPTION_KEY}"
      - android/firebase-test:
          key-file: .circleci/.firebase.secrets.json
          type: instrumentation
          apk-path: WordPress/build/outputs/apk/wordpressVanilla/debug/org.wordpress.android-wordpress-vanilla-debug.apk
          test-apk-path: WordPress/build/outputs/apk/androidTest/wordpressVanilla/debug/org.wordpress.android-wordpress-vanilla-debug-androidTest.apk
          test-targets: package org.wordpress.android.ui.screenshots
          # NOTE: When updating this list of devices, ensure to also update the `phone:` and `tenInch:` parameters in "Download Raw Screenshots from Google Storage"
          devices: |
            model=blueline,version=28,orientation=portrait
            model=gts3lltevzw,version=28,orientation=default
          # NOTE: When updating this list of locales, ensure to also update the `promo_config:` keys accordingly in the `SUPPORTED_LOCALES` in `fastlane/Fastfile`
          # locales: ar de_DE en_US es_ES fr_FR iw_IL in it_IT ja_JP ko_KR nl_NL pl_PL pt_BR ru_RU sr sv_SE th tr_TR vi zh_CN zh_TW
          locales: ar de_DE en_US es_ES fr_FR iw_IL in it_IT ja_JP ko_KR nl_NL pl_PL pt_BR ru_RU sr sv_SE th tr_TR vi zh_CN zh_TW
          project: api-project-108380595987
          timeout: 30m
          num-flaky-test-attempts: 2
          results-history-name: CircleCI WordPress Screenshots
      - android/save-gradle-cache
      - run:
          name: Download Raw Screenshots from Google Storage
          command: |
            TEST_BUCKET=$(cat log.txt | grep -o "gs://test\-lab\-.*/" | head -1)
            export FASTLANE_SKIP_UPDATE_CHECK=1
            bundle exec fastlane download_raw_screenshots bucket:"$TEST_BUCKET" phone:blueline-28 tenInch:gts3lltevzw-28
      - persist_to_workspace:
          root: .
          paths:
            - Gemfile
            - Gemfile.lock
            - fastlane/
  promo-screenshots:
    parameters:
      post-to-slack:
        description: Post to Slack when screenshots job has finished. SLACK_WEBHOOK ENV variable must be set.
        type: boolean
        default: true
    macos:
      xcode: 11.6.0
    working_directory: /tmp/workspace
    steps:
      - attach_workspace:
          at: .
      - restore_cache:
          # ImageMagick is used by the 'rmagick' gem, so cache invalidation of ImageMagick should depend on version of rmagick from Gemfile.lock
          keys:
            - &homebrew-cache-key v2-brew-imagemagick-{{ checksum "Gemfile.lock" }}
      - run:
          name: Brew Install ImageMagick
          command: |
            brew install pkg-config imagemagick
            brew cleanup
      - save_cache:
          paths:
            - ~/Library/Caches/Homebrew
          key: *homebrew-cache-key
      - run:
          name: Bundle install with rmagick
          command: |
            # Activate 'screenshots' in bundle config options (remove it from 'without' in case it's set here)
            bundle config --local --delete without
            bundle config --local with screenshots
            bundle install --path vendor/bundle
      - run:
          name: Download Promo Strings
          command: FASTLANE_SKIP_UPDATE_CHECK=1 bundle exec fastlane download_promo_strings
      - run:
          name: Create Promo Screenshots
          command: FASTLANE_SKIP_UPDATE_CHECK=1 bundle exec fastlane android create_promo_screenshots force:true
      - run:
          name: ZIP Metadata
          command: cd fastlane/metadata; zip -r Android-Promo-Screenshots.zip android
      - store_artifacts:
          path: fastlane/metadata/Android-Promo-Screenshots.zip
      - when:
          condition: << parameters.post-to-slack >>
          steps:
            - slack/status:
                include_job_number_field: false
                include_project_field: false
                webhook: '${SLACK_BUILD_WEBHOOK}'
                # [Trial] Validate URLs (and IDs used within those) in both those messages and adapt to the ones for a8c instances once we integrate the PR from fork to main repo
                failure_message: ':red_circle: WordPress Android Screenshots failed on \`${CIRCLE_BRANCH}\` branch. See <https://console.firebase.google.com/u/0/project/api-project-108380595987/testlab/histories/bh.e0c3a59bd9ed670|Firebase console test results> for details.\n\nPlease reach out in #platform9 if you think this failure is not caused by your changes, so we can investigate.'
                success_message: ':tada: WordPress Android Promo Screenshots have been generated and are ready to be reviewed. Download them <https://${CIRCLE_BUILD_NUM}-9306568-gh.circle-artifacts.com/0/fastlane/metadata/Android-Promo-Screenshots.zip|here>'
  WordPressUtils Connected Tests:
    executor:
      name: android/default
      api-version: "29"
    steps:
      - git/shallow-checkout
      - android/restore-gradle-cache
      - copy-gradle-properties
      - update-gradle-memory
      - run:
          name: Build
          command: ./gradlew WordPress:assembleWordPressVanillaDebug && cd libs/utils && ./gradlew assembleAndroidTest --stacktrace
      - run:
          name: Decrypt credentials
          command: openssl aes-256-cbc -md sha256 -d -in .circleci/.firebase.secrets.json.enc -out .circleci/.firebase.secrets.json -k "${FIREBASE_SECRETS_ENCRYPTION_KEY}"
      - android/firebase-test:
          key-file: .circleci/.firebase.secrets.json
          type: instrumentation
          apk-path: WordPress/build/outputs/apk/wordpressVanilla/debug/org.wordpress.android-wordpress-vanilla-debug.apk
          test-apk-path: libs/utils/WordPressUtils/build/outputs/apk/androidTest/debug/WordPressUtils-debug-androidTest.apk
          device: model=Pixel2,version=28,locale=en,orientation=portrait
          project: api-project-108380595987
          timeout: 10m
          results-history-name: CircleCI WPUtils Connected Tests
      - android/save-gradle-cache

workflows:
  wordpress_android:
    unless:
      or:
        - << pipeline.parameters.generate_screenshots >>
        - << pipeline.parameters.release_build >>
    jobs:
      - Installable Build:
          filters:
            branches:
              ignore: /pull\/[0-9]+/
      - Connected Tests:
          post-to-slack: true
          # Always run connected tests on develop and release branches
          filters:
            branches:
              only:
                - develop
                - /^release.*/
                - /^gutenberg\/integrate_release_.*/
  Optional Tests:
    unless:
      or:
        - << pipeline.parameters.generate_screenshots >>
        - << pipeline.parameters.release_build >>
    #Optionally run connected tests on PRs
    jobs:
      - Hold:
          type: approval
          filters:
            branches:
              ignore:
                - develop
                - /^release.*/
                - /^gutenberg\/integrate_release_.*/
                - /pull\/[0-9]+/
      - Connected Tests:
          requires: [Hold]
  Screenshots:
    when: << pipeline.parameters.generate_screenshots >>
    jobs:
      - raw-screenshots
      - promo-screenshots:
          requires: [raw-screenshots]
  Release Build:
    when: << pipeline.parameters.release_build >>
    jobs:
      - Release Build:
          name: "Release: WP Alpha"
          app: wordpress
          alpha: true
      - Release Build:
          name: "Release: WP Beta"
          app: wordpress
          alpha: false
      - Release Build:
          name: "Release: JP Beta"
          app: jetpack
          alpha: false
      - Create GitHub Release:
          requires: ["Release: WP Alpha", "Release: WP Beta", "Release: JP Beta"]

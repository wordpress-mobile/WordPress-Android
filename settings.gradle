plugins {
  id "com.gradle.enterprise" version "3.4.1"
}

include ':WordPress'
include ':libs:stories-android:stories'
project(':libs:stories-android:stories').projectDir = new File(rootProject.projectDir, 'libs/stories-android/stories')
include ':mp4compose'
project(':mp4compose').projectDir = new File(rootProject.projectDir, 'libs/stories-android/mp4compose')
include ':photoeditor'
project(':photoeditor').projectDir = new File(rootProject.projectDir, 'libs/stories-android/photoeditor')

include ':libs:image-editor:ImageEditor'
include ':libs:networking:WordPressNetworking'
include ':libs:analytics:WordPressAnalytics'
include ':libs:editor:WordPressEditor'
include ':libs:login:WordPressLoginFlow'
include ':libs:WordPressProcessors'
include ':libs:WordPressAnnotations'

include ':WordPressMocks'
project(':WordPressMocks').projectDir = new File(rootProject.projectDir, properties.getOrDefault('wp.wordpress_mocks_path', 'libs/mocks') + '/WordPressMocks')

gradle.ext.fluxCBinaryPath = "com.github.wordpress-mobile.WordPress-FluxC-Android"
gradle.ext.wputilsBinaryPath = "org.wordpress:utils"
gradle.ext.gutenbergMobileBinaryPath = "com.github.wordpress-mobile.gutenberg-mobile:react-native-gutenberg-bridge"
gradle.ext.includedBuildGutenbergMobilePath = null

def localBuilds = new File('local-builds.gradle')
if (localBuilds.exists()) {
    apply from: localBuilds

    /*
    In order to add a new included build:
    1. Define a property for its path in the `local-builds.gradle-example` file. 
    2. Check if that property exists in `ext` since it may be commented out.
    3. Include the build using the property.
    4. Add dependencySubstitution block and substitute the binary module with the project.

    Note that `project` dependencies are resolved in the context of the included build.
    https://docs.gradle.org/current/javadoc/org/gradle/api/initialization/ConfigurableIncludedBuild.html#dependencySubstitution-org.gradle.api.Action-
    */

    if (ext.has("localFluxCPath")) {
        includeBuild(ext.localFluxCPath) {
            dependencySubstitution {
                println "Substituting fluxc with the local build"
                substitute module("$gradle.ext.fluxCBinaryPath:fluxc") with project(':fluxc')
            }
        }
    }

    if (ext.has("localWPUtilsPath")) {
        includeBuild(ext.localWPUtilsPath) {
            dependencySubstitution {
                println "Substituting wputils with the local build"
                substitute module("$gradle.ext.wputilsBinaryPath") with project(':WordPressUtils')
            }
        }
    }

    if (ext.has("localGutenbergMobilePath")) {
        gradle.ext.includedBuildGutenbergMobilePath = ext.localGutenbergMobilePath
        includeBuild("$ext.localGutenbergMobilePath/gutenberg/packages/react-native-bridge/android") {
            dependencySubstitution {
                println "Substituting gutenberg-mobile with the local build"
                substitute module("$gradle.ext.gutenbergMobileBinaryPath") with project(':react-native-bridge')
            }
        }
    }
}


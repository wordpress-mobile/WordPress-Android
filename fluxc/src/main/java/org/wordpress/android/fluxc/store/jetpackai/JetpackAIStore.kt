package org.wordpress.android.fluxc.store.jetpackai

import org.wordpress.android.fluxc.model.SiteModel
import org.wordpress.android.fluxc.network.rest.wpcom.jetpackai.JetpackAIRestClient
import org.wordpress.android.fluxc.tools.CoroutineEngine
import org.wordpress.android.util.AppLog
import javax.inject.Inject
import javax.inject.Singleton

@Singleton
class JetpackAIStore @Inject constructor(
    private val jetpackAIRestClient: JetpackAIRestClient,
    private val coroutineEngine: CoroutineEngine
) {
    /**
     * Fetches Jetpack AI completions for a given prompt to be used on a particular post.
     *
     * @param site      The site for which completions are fetched.
     * @param prompt    The prompt used to generate completions.
     * @param skipCache If true, bypasses the default 30-second throttle and fetches fresh data.
     * @param postId    Used to mark the post as having content generated by Jetpack AI.
     */
    suspend fun fetchJetpackAICompletionsForPost(
        site: SiteModel,
        prompt: String,
        postId: Long,
        skipCache: Boolean = false,
    ) = fetchJetpackAICompletions(site, prompt, skipCache, postId)


    /**
     * Fetches Jetpack AI completions for a given prompt used globally by a site.
     *
     * @param site      The site for which completions are fetched.
     * @param prompt    The prompt used to generate completions.
     * @param skipCache If true, bypasses the default 30-second throttle and fetches fresh data.
     */
    suspend fun fetchJetpackAICompletionsForSite(
        site: SiteModel,
        prompt: String,
        skipCache: Boolean = false
    ) = fetchJetpackAICompletions(site, prompt, skipCache)

    private suspend fun fetchJetpackAICompletions(
        site: SiteModel,
        prompt: String,
        skipCache: Boolean,
        postId: Long? = null
    ) = coroutineEngine.withDefaultContext(
        tag = AppLog.T.API,
        caller = this,
        loggedMessage = "fetch Jetpack AI completions"
    ) {
        jetpackAIRestClient.fetchJetpackAICompletions(site, prompt, skipCache, postId)
    }
}

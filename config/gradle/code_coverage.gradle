static String resolveProjectVariantForCodeCoverage(Project project) {
    if (project.name == "WordPress") {
        return "wordpressVanillaRelease"
    } else {
        return "release"
    }
}

subprojects {
    pluginManager.withPlugin("org.jetbrains.kotlinx.kover") {
        if (project.plugins.hasPlugin("com.android.library") || project.plugins.hasPlugin("com.android.application")) {
            koverReport {
                defaults {
                    mergeWith(resolveProjectVariantForCodeCoverage(project))
                }
            }
        }
    }
}

dependencies {
    kover(
            project(":WordPress"),
            project(":libs:editor"),
            project(":libs:image-editor"),
            project(":libs:processors"),
    )
}

koverReport {
    filters {
        excludes {
            packages(
                    'com.bumptech.glide',
                    'dagger.*',
                    '*.compose*',
                    '*.debug*',
                    'hilt_aggregated_deps',
                    '*.databinding',
                    'org.wordpress.android.modules',
                    'org.wordpress.android.widgets',
            )

            classes(
                    '*_Factory*',
                    '*Activity',
                    '*Activity$*',
                    '*Adapter',
                    '*Adapter$*',
                    '*BuildConfig',
                    '*DiffCallback*',
                    '*Dialog',
                    '*Dialog$*',
                    '*Fragment',
                    '*Fragment$*',
                    '*FragmentDirections*',
                    '*FragmentKt*',
                    '*Module',
                    '*Module_*',
                    '*View',
                    '*View$*',
                    '*ViewHolder',
                    '*ViewHolder$*',
                    '*ViewHolderKt*',
                    '*.Hilt_*',
                    '*HiltModules*',
                    '*_MembersInjector',
            )
        }
    }
}

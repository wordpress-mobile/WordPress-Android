buildscript {
    ext.kotlinVersion = '1.4.10'
    ext.kotlin_ktx_version = '1.2.0'

    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath 'com.android.tools.build:gradle:4.0.1'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.5'
    }
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

repositories {
    google()
    jcenter()
}

dependencies {
    implementation 'org.apache.commons:commons-text:1.1'
    implementation 'com.android.volley:volley:1.1.1'
    implementation 'com.google.android.material:material:1.2.1'
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'org.greenrobot:eventbus:3.0.0'

    implementation "androidx.core:core-ktx:$kotlin_ktx_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.assertj:assertj-core:3.11.1'
    testImplementation "org.robolectric:robolectric:4.4"
    testImplementation 'androidx.test:core:1.0.0'

    lintChecks 'org.wordpress:lint:1.0.1'
    androidTestImplementation 'androidx.test:runner:1.1.0'
    androidTestImplementation 'androidx.test:rules:1.1.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.0'
    androidTestImplementation 'com.android.support.test.uiautomator:uiautomator-v18:2.1.2'

}

android {
    useLibrary 'org.apache.http.legacy'

    compileSdkVersion 29

    defaultConfig {
        versionName "1.30"
        minSdkVersion 18
        targetSdkVersion 29

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }
}

android.libraryVariants.all { variant ->
    task("generate${variant.name}Javadoc", type: Javadoc) {
        description "Generates Javadoc for $variant.name."
        source = variant.javaCompile.source

        options {
            links "http://docs.oracle.com/javase/7/docs/api/"
        }
        exclude '**/R.java'
        doFirst {
            classpath =
                    files(variant.javaCompile.classpath.files,
                            project.android.getBootClasspath())
        }
    }
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayKey') ? project.property('bintrayKey') : System.getenv('BINTRAY_KEY')
    publications = ['UtilsPublication']
    publish = true
    pkg {
        repo = 'maven'
        name = 'utils'
        userOrg = 'wordpress-mobile'
        licenses = ['MIT', 'GPL']
        vcsUrl = 'https://github.com/wordpress-mobile/WordPress-Utils-Android.git'
        version {
            name = android.defaultConfig.versionName
            desc = 'Utils library for Android'
            released  = new Date()
        }
    }
}

project.afterEvaluate {
    publishing {
        publications {
            UtilsPublication(MavenPublication) {
                from components.release
                groupId 'org.wordpress'
                artifactId 'utils'
                version android.defaultConfig.versionName
            }
        }
    }
}

